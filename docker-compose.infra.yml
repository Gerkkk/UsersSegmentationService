version: '3.9'

services:
  shard1-db:
    image: postgres:16
    container_name: shard1-db
    environment:
      POSTGRES_DB: shard1
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: pass1
    ports:
      - "5433:5432"
    volumes:
      - shard1_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "max_prepared_transactions=10"]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user1", "-d", "shard1"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      app-net:

  shard2-db:
    image: postgres:16
    container_name: shard2-db
    environment:
      POSTGRES_DB: shard2
      POSTGRES_USER: user2
      POSTGRES_PASSWORD: pass2
    ports:
      - "5434:5432"
    volumes:
      - shard2_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "max_prepared_transactions=10"]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user2", "-d", "shard2" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      app-net:

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      app-net:

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-net
      - app-net

  kafka:
    image: bitnami/kafka:3.3
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://host.docker.internal:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - kafka-net
      - app-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092, localhost:9092, localhost:29092
    depends_on:
      - kafka
    networks:
      - kafka-net
      - app-net

volumes:
  shard1_data:
  shard2_data:

networks:
  kafka-net:
    driver: bridge
  app-net:
    driver: bridge